apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-insight
  namespace: management
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-insight
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis-insight
      namespace: management
    spec:
      containers:
      - env:
        - name: SERVICE_NAME
          value: redis-insight
        - name: RITRUSTEDORIGINS
          value: http://redis-insight.yakir.com,https://redis-insight.yakir.com
        image: redislabs/redisinsight:1.14.0
        imagePullPolicy: IfNotPresent
        name: redis-insight
        ports:
        - containerPort: 8001
          name: port-8001
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-insight
  name: redis-insight
  namespace: management
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: port-8080
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: redis-insight
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redis-insight-ing
  namespace: management
spec:
  ingressClassName: nginx
  rules:
  - host: redis-insight.opsre.net
    http:
      paths:
      - backend:
          service:
            name: redis-insight
            port:
              number: 8001
        path: /
        pathType: ImplementationSpecific
status:
  loadBalancer:
    ingress:
    - ip: 1.1.1.1
